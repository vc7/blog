---
layout: post
title: "近日對教學的感想"
date: 2014-07-17 14:00:15 +0800
comments: true
categories: ["Feedback", "Thinking"]
keywords: teaching and learning, 教學, 回饋, 教法, cs193p
description: "最近跑了一些 workshops 當助教，雖然都不是主講，但是有下去協助學員學習，對助教的做法和教材教法都有些心得，階段性的做個記錄下來。"
references: 
hero: "https://farm6.staticflickr.com/5570/14488336317_012db57e03_o.png"
---

最近跑了一些 workshops 當助教，雖然都不是主講，但是有下去協助學員學習，對助教的做法和教材教法都有些心得，階段性的做個記錄下來。

<!-- more -->

## 我的背景

我從彰師大畢業，沒有修過教程。但是從大一幫忙系上的資訊夏令營，到母校民生國小教 Photoshop ，就有第一次自己設計教材上台教的經驗；到一路以來也有在補習班教電腦，所以也需要設計教材和教法：怎麼讓學生聽得懂、有興趣、有用等等的。

## 教材設計

而程式語言教學的部分，一直是處於助教的角色，沒有直接上台教過。但是最近有發現，有的教材在撰寫的時候，會比較以自己是「知道的人」下去寫，這樣子就會造成學員上課或自己回家看會冒出許多問題。因此什麼不該省略的（如某段程式碼該放哪邊）就一定要寫；不必要知道的話，又想要讓學員知道，就要看怎麼表現可以比較適當不會多餘。如果有需要，就附上解說圖，一張清楚表示地圖可以解決千言萬語的解釋。

比較可以參考程式相關的簡報表達方式，近幾年來也看了很多 open cources 所以也有一些可以推薦的。

### 參考對象

首推就是 WWDC Keynotes 以外的 sessions 。不是指他們所附的 PDF 檔，而是要看影片中他們表達的方式：會適度做不同段落程式碼的淡出淡入，以觀看者來說，就可以很清楚地知道目前的重點在哪裡。

另外就是 [Stanford CS 193P iPhone Application Development](http://web.stanford.edu/class/cs193p/cgi-bin/drupal/) ，個人非常喜歡 Paul Hegarty 的教學表現方式，對學生來說非常清楚。

## 怎麼當助教

在協助學員的時候，可以鼓勵他們做筆記。當他們有問題求救的時候，如果時間允許，可以引導他們解決他們現在碰到的問題，就是不要直接拿學員的鍵盤來幫他做事情。有這個過程也可以讓他們學習如何解決問題的過程或思考模式，未來他們碰到問題的時候，也可以這樣的模式來解題。

### 自我成長

當然當助教不是我人到場直接教一教就好，自己也要有所準備。

在平時則多涉略一些知識（廣度），要知道怎麼向別人解釋一些工具的用處或可以怎麼應用。這樣除了可以增加自己的知識量之外，當學員問到相關的問題，就會知道該怎麼回答，和 further 知識，對方就可以學到更多。

如果可以的話，可以把蒐集到的知識寫成部落格，用 wordpress 或用 Octopress, Logdown 之類的 markdown 部落格系統寫都可以。寫了一次可以**增加印象**，可以**結構化表達自己了解到的東西**，也可以**分享**知識給其他人。

## 結論

大致上是這樣，另外在簡報製作上也有很多小技巧需要顧慮，自己也有一些方法論。除此之外，自己需要學的東西也很多要準備的內容也很多，繼續加油了！