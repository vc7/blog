---
layout: post
title: "適應或是採用新技術"
date: 2014-07-30 23:30:02 +0800
comments: true
categories: ["Thinking"]
keywords: 思考，thinking
description: "這一年以來工作上，以及這一陣子去一些公司面試交談之間，雖然我還不是走在技術應用的最前端，但是對於採用新技術或新科技與否還是有一些心得及看法。"
references:
hero: "https://farm4.staticflickr.com/3867/14600439129_e9a509e72a_o.png"
---

這一年以來工作上，以及這一陣子去一些公司面試交談之間，雖然我還不是走在技術應用的最前端，但是對於採用新技術或新科技與否還是有一些心得及看法。

<!-- more -->

其實有些就技術不是就是不好，昨天也剛好看到一些討論串大意上說：舊的瀏覽器就用得好好的我為什麼要更新？舊的 iPhone 就用得好好的為什麼 Apple 會讓他變得越來越慢？

不過這個好像有點離題，但是也有點到我的一些想法。

> 學如逆水行舟，不進則退

在這個技術爆炸的年代，要勇於攫取新知才不會流於退步。

版本控制應該是最近以來自己一直碰到的議題。

從大學時代，老師教我們的方式是，複製一個新的檔案或資料夾、修改日期當版本控管；除了自己有在玩玩 svn ，當時也只有認識的一個學長有在碰 svn ，在參加中華電信競賽的專題，也只有資料夾版本控管、甚至到後來參加 iOS app 競賽的時候，還不太會用 git ，用資料夾控管的方式問題也超級多。

接著就痛定思痛專心學 git ，因為工作上主要是使用 Xcode ，和 git 整合比較好；另外目前外面開發者群體主要走向也是以 git 版控為主。這些都是我走 git 的原因。

最近和一個團隊在聊的時候，得知他們過去的 iOS 專案是用 svn 做版控。於是向他們詢問其實 Xcode 和 git 整合使用會比較好用，為什麼不用？不過他們其實也知道這件事情，只是他們過去的專案都是用 svn ，還沒有計畫換成 git 來控管。

除此之外也沒有使用 CocoaPods 來幫忙做第三方 library 的套件相依性管理，因此很多事情都是比較 old school 的方式去做，專案開發的效率可能就有點差。

接著其他的事情像是不想採用持續整合、覺得寫單元測試很浪費時間等等相對比較新的開發流程也都有碰過。

今天講到的都只是一些碰到的事情，還是有很多需要多多學習多多看，才可以更加往前走。

看了 WWDC 很多關於架構和 design pattern 的 sessions 總會有種種的心得啊！
